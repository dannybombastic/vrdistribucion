if(window.ProfessionalAnimation);else{class t{constructor(t){this.canvas=document.getElementById(t),this.canvas&&(this.ctx=this.canvas.getContext("2d"),this.waves=[],this.particles=[],this.geometrics=[],this.resizeCanvas(),this.init(),this.animate(),window.addEventListener("resize",(()=>this.resizeCanvas())))}resizeCanvas(){const t=this.canvas.parentElement.getBoundingClientRect();this.canvas.width=t.width,this.canvas.height=t.height}init(){for(let t=0;t<3;t++)this.waves.push(this.createWave(t));for(let t=0;t<20;t++)this.particles.push(this.createParticle());for(let t=0;t<8;t++)this.geometrics.push(this.createGeometric())}createWave(t){return{amplitude:30+10*t,frequency:.003+.001*t,phase:t*Math.PI/3,speed:.01+.005*t,offset:0,color:`rgba(99, 102, 241, ${.08-.02*t})`}}createParticle(){return{x:Math.random()*this.canvas.width,y:Math.random()*this.canvas.height,size:2*Math.random()+.5,speedX:.3*(Math.random()-.5),speedY:.3*(Math.random()-.5),color:this.getRandomProfessionalColor(),opacity:.4*Math.random()+.1,pulse:Math.random()*Math.PI*2,pulseSpeed:.01+.01*Math.random()}}createGeometric(){const t=["circle","triangle","diamond","hexagon"];return{x:Math.random()*this.canvas.width,y:Math.random()*this.canvas.height,size:30*Math.random()+10,shape:t[Math.floor(Math.random()*t.length)],rotation:Math.random()*Math.PI*2,rotationSpeed:.005*(Math.random()-.5),color:this.getRandomProfessionalColor(),opacity:.15*Math.random()+.05,scale:1,scaleDirection:1,scaleSpeed:.002+.003*Math.random()}}getRandomProfessionalColor(){const t=["rgba(99, 102, 241, 0.3)","rgba(236, 72, 153, 0.25)","rgba(139, 92, 246, 0.2)","rgba(59, 130, 246, 0.2)","rgba(16, 185, 129, 0.25)"];return t[Math.floor(Math.random()*t.length)]}drawWave(t){this.ctx.save(),this.ctx.globalAlpha=.6,this.ctx.strokeStyle=t.color,this.ctx.lineWidth=2,this.ctx.beginPath();for(let e=0;e<=this.canvas.width;e+=5){const s=this.canvas.height/2+Math.sin(e*t.frequency+t.phase+t.offset)*t.amplitude;0===e?this.ctx.moveTo(e,s):this.ctx.lineTo(e,s)}this.ctx.stroke(),this.ctx.restore()}drawGeometric(t){switch(this.ctx.save(),this.ctx.globalAlpha=t.opacity,this.ctx.fillStyle=t.color,this.ctx.strokeStyle=t.color,this.ctx.lineWidth=1,this.ctx.translate(t.x,t.y),this.ctx.rotate(t.rotation),this.ctx.scale(t.scale,t.scale),t.shape){case"circle":this.ctx.beginPath(),this.ctx.arc(0,0,t.size/2,0,2*Math.PI),this.ctx.stroke();break;case"triangle":this.ctx.beginPath(),this.ctx.moveTo(0,-t.size/2),this.ctx.lineTo(-t.size/2,t.size/2),this.ctx.lineTo(t.size/2,t.size/2),this.ctx.closePath(),this.ctx.stroke();break;case"diamond":this.ctx.beginPath(),this.ctx.moveTo(0,-t.size/2),this.ctx.lineTo(t.size/2,0),this.ctx.lineTo(0,t.size/2),this.ctx.lineTo(-t.size/2,0),this.ctx.closePath(),this.ctx.stroke();break;case"hexagon":this.ctx.beginPath();for(let e=0;e<6;e++){const s=e*Math.PI/3,a=Math.cos(s)*t.size/2,i=Math.sin(s)*t.size/2;0===e?this.ctx.moveTo(a,i):this.ctx.lineTo(a,i)}this.ctx.closePath(),this.ctx.stroke();break}this.ctx.restore()}animate(){this.ctx.fillStyle="rgba(255, 255, 255, 0.02)",this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),this.waves.forEach((t=>{t.offset+=t.speed,this.drawWave(t)})),this.particles.forEach((t=>{t.x+=t.speedX,t.y+=t.speedY,t.pulse+=t.pulseSpeed,(t.x<0||t.x>this.canvas.width)&&(t.speedX*=-.8,t.x=Math.max(0,Math.min(this.canvas.width,t.x))),(t.y<0||t.y>this.canvas.height)&&(t.speedY*=-.8,t.y=Math.max(0,Math.min(this.canvas.height,t.y)));const e=t.size+.2*Math.sin(t.pulse);this.ctx.save(),this.ctx.globalAlpha=t.opacity,this.ctx.fillStyle=t.color,this.ctx.beginPath(),this.ctx.arc(t.x,t.y,e,0,2*Math.PI),this.ctx.fill(),this.ctx.restore()})),this.geometrics.forEach((t=>{t.rotation+=t.rotationSpeed,t.scale+=t.scaleSpeed*t.scaleDirection,(t.scale>1.2||t.scale<.8)&&(t.scaleDirection*=-1),this.drawGeometric(t)})),requestAnimationFrame((()=>this.animate()))}}class e{constructor(){this.observers=[],this.setupIntersectionObserver()}setupIntersectionObserver(){const t=new IntersectionObserver((e=>{e.forEach((e=>{e.isIntersecting&&(this.animateCounter(e.target),t.unobserve(e.target))}))}),{threshold:.5,rootMargin:"0px 0px -50px 0px"});document.querySelectorAll(".experience-metric").forEach((e=>{t.observe(e)}))}animateCounter(t){const e=parseInt(t.dataset.animate),s=t.querySelector(".metric-number"),a=performance.now(),i=t=>{const h=t-a,o=Math.min(h/2500,1),r=1-Math.pow(1-o,4),c=Math.floor(e*r);s.textContent=98===e?c+"%":e>=1e3?c.toLocaleString()+"+":c+"+",o<1&&requestAnimationFrame(i)};requestAnimationFrame(i)}}document.addEventListener("DOMContentLoaded",(()=>{setTimeout((()=>{new t("professionalCanvas"),new e}),100)}))}